version: '3'

services:
  php:
    build:
      context: ./docker/php
    volumes:
      - ./:/var/www/app
      - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    ports:
      - "9004:9001"
    environment:
      - 'DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_ROOT_PASSWORD}@mysql:3306/${MYSQL_DATABASE}'

  nginx:
    image: nginx:stable
    ports:
      - "80:80"
    volumes:
      - ./:/var/www/app
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - SERVER_NAME=personal.project

  mysql:
    image: mysql/mysql-server:8.0.23
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    command: --lower_case_table_names=1

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-15}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  ###> symfony/mailer ###
  mailer:
    image: schickling/mailcatcher
    ports: ["1025", "1080"]
###< symfony/mailer ###

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

